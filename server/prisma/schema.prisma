// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  preferredModel String?  @default("gpt-4o-mini")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  chats Chat[]

  @@map("users")
}

model Chat {
  id        String   @id @default(cuid())
  title     String?
  type      ChatType @default(DOCUMENT)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("chats")
}

model Message {
  id        String      @id @default(cuid())
  content   String
  role      MessageRole
  model     String? // Track which model was used for this message
  chatId    String
  createdAt DateTime    @default(now())

  // Relations
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("messages")
}

enum ChatType {
  DOCUMENT
  REPOSITORY
}

enum MessageRole {
  USER
  ASSISTANT
}
